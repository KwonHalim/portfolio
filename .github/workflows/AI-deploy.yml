name: AI CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'AI/**'

jobs:
  tag_and_build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Print new tag
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        run: |
          echo "New tag created: ${{ steps.tag_version.outputs.new_tag }}"
#          깃허브 액션 서버는 amd64,내 서버는 arm64이므로 환경 호환이 안되므로 빌드 환경을 수정해야 한다.
      # 1. QEMU 설정 (다른 아키텍처 에뮬레이션)
      - name: Set up QEMU
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        uses: docker/setup-qemu-action@v3

      # 2. Docker Buildx 설정 (멀티플랫폼 빌드 도구)
      - name: Set up Docker Buildx
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 4. ARM64용 이미지 빌드 및 푸시
      - name: Build and push Docker image for ARM64
        if: ${{ steps.tag_version.outputs.new_tag != '' }}
        run: |
          IMAGE_TAG=${{ steps.tag_version.outputs.new_tag }}
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/harimdev-ai
          docker buildx build --platform linux/arm64 -t $IMAGE_NAME:$IMAGE_TAG --push ./AI


  deploy:
    needs: tag_and_build
    if: ${{ needs.tag_and_build.outputs.new_tag != '' }}
    runs-on: self-hosted
    steps:
      - name: Deploy to AI Chat Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AI_SERVER_HOST }}
          username: ${{ secrets.AI_SERVER_USERNAME }}
          password: ${{ secrets.AI_SERVER_PASSWORD }} # 추후 SSH Key로 교체
          script: |
            IMAGE_TAG=${{ needs.tag_and_build.outputs.new_tag }}
            IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/harimdev-ai

            docker stop harimdev-ai || true
            docker rm harimdev-ai || true
            docker pull $IMAGE_NAME:$IMAGE_TAG
            docker run -d --name harimdev-ai -p 8000:8000 \
              --network ai-network \
              --env-file /home/halim/portfolio/AI/.env \
              $IMAGE_NAME:$IMAGE_TAG

            echo "===== Running containers ====="
            docker ps -a | grep harimdev-ai
